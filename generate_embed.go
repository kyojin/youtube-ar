// +build ignore

package main

import (
	"bytes"
	"fmt"
	"go/format"
	"io/ioutil"
	"log"
	"path/filepath"
)

func main() {
	if err := generate(); err != nil {
		log.Fatal(err)
	}
}

func generate() error {
	buf := new(bytes.Buffer)
	fmt.Fprintln(buf, `// Code generated by "generate_embed"; DO NOT EDIT.`)
	fmt.Fprintln(buf, "package main")

	fnames, err := filepath.Glob("queries/*.sql")
	if err != nil {
		return err
	}
	fmt.Fprintln(buf, "var queries = map[string]string{")
	for _, fname := range fnames {
		b, err := ioutil.ReadFile(fname)
		if err != nil {
			return err
		}
		fmt.Fprintf(buf, "\t%q: %q,\n", filepath.Base(fname), b)
	}
	fmt.Fprintln(buf, "}")

	fnames, err = filepath.Glob("templates/*.html")
	if err != nil {
		return err
	}
	fmt.Fprintln(buf, "var templates = map[string]string{")
	for _, fname := range fnames {
		b, err := ioutil.ReadFile(fname)
		if err != nil {
			return err
		}
		fmt.Fprintf(buf, "\t%q: %q,\n", filepath.Base(fname), b)
	}
	fmt.Fprintln(buf, "}")

	fmtbuf, err := format.Source(buf.Bytes())
	if err != nil {
		return err
	}
	return ioutil.WriteFile("embed.go", fmtbuf, 0644)
}
